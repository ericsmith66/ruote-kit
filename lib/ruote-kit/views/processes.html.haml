
- # under the MIT license, see LICENSE.txt

%h1 processes

= haml :_pagination, :layout => false

%table#table-to-grid{:cellspacing => "0"}
  %thead
    %tr{:style => "background:#eeeeee;"}
      %th wfid
      %th name
      %th{:style => "width: 100px;"}position
      %th{:style => "width: 40px;"} tags
      %th launched
      %th last active
      %th{:style => "width: 40px;"}  exps
      %th{:style => "width: 40px;"}  errs
      %th{:style => "width: 40px;"}  wis
  %tbody
    - @processes.each do |process|
      %tr
        %td
          = alink(:processes, process.wfid, :text => process.wfid)
        %td
          &= process.definition_name
          &= process.definition_revision
        %td
          - process.position.each do |pos|
            - stored_wi = process.stored_workitems.find { |wi| wi.fei.sid == pos[0] }
            - text = "#{pos[1]} #{pos[2]['task']}"
            - if stored_wi
              = alink(:workitems, stored_wi.fei.sid, :text => text)
            - else
              &= text
        %td
          &= process.tags.collect { |ta| ta.first }.join(', ')
        %td
          = Time.parse(process.launched_time).localtime.strftime('%Y/%m/%d %H:%M:%S')
        %td
          = Time.parse(process.last_active).localtime.strftime('%Y/%m/%d %H:%M:%S')
        %td.right{ :title => 'expressions' }
          = alink(:expressions, process.wfid, :text => process.expressions.size)
        %td.right{ :title => 'errors' }
          - if process.errors.size > 0
            = alink(:errors, process.wfid, :text => process.errors.size)
        %td.right{ :title => 'workitems' }
          - if process.stored_workitems.size > 0
            = alink(:workitems, process.wfid, :text => process.stored_workitems.size)
:javascript
  Ext.onReady(function(){
    var grid = new Ext.ux.grid.TableGrid("table-to-grid", {
      stripeRows: true // stripe alternate rows
    });
    grid.render();
  });

